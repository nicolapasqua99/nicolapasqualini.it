"""
✨ `Card_KeyOutput` returns the primary key fields of table type `Card`.

It has the same format as `Card_Key`, but is only used as mutation return value.
"""
scalar Card_KeyOutput
"""
✨ `CardPack_KeyOutput` returns the primary key fields of table type `CardPack`.

It has the same format as `CardPack_Key`, but is only used as mutation return value.
"""
scalar CardPack_KeyOutput
"""
✨ `Offer_KeyOutput` returns the primary key fields of table type `Offer`.

It has the same format as `Offer_Key`, but is only used as mutation return value.
"""
scalar Offer_KeyOutput
"""
✨ `Pack_KeyOutput` returns the primary key fields of table type `Pack`.

It has the same format as `Pack_Key`, but is only used as mutation return value.
"""
scalar Pack_KeyOutput
"""
✨ `Rarity_KeyOutput` returns the primary key fields of table type `Rarity`.

It has the same format as `Rarity_Key`, but is only used as mutation return value.
"""
scalar Rarity_KeyOutput
"""
✨ `RelatedCard_KeyOutput` returns the primary key fields of table type `RelatedCard`.

It has the same format as `RelatedCard_Key`, but is only used as mutation return value.
"""
scalar RelatedCard_KeyOutput
"""
✨ `Request_KeyOutput` returns the primary key fields of table type `Request`.

It has the same format as `Request_Key`, but is only used as mutation return value.
"""
scalar Request_KeyOutput
"""
✨ `Set_KeyOutput` returns the primary key fields of table type `Set`.

It has the same format as `Set_Key`, but is only used as mutation return value.
"""
scalar Set_KeyOutput
"""
✨ `User_KeyOutput` returns the primary key fields of table type `User`.

It has the same format as `User_Key`, but is only used as mutation return value.
"""
scalar User_KeyOutput
"""
✨ `UserCard_KeyOutput` returns the primary key fields of table type `UserCard`.

It has the same format as `UserCard_Key`, but is only used as mutation return value.
"""
scalar UserCard_KeyOutput
"""
✨ Generated data input type for table 'Card'. It includes all necessary fields for creating or upserting rows into table.
"""
input Card_Data {
  """
  ✨ Generated from Field `Card`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Card`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Card`.`rarityId` of type `UUID!`
  """
  rarityId: UUID
  """
  ✨ `_expr` server value variant of `rarityId` (✨ Generated from Field `Card`.`rarityId` of type `UUID!`)
  """
  rarityId_expr: UUID_Expr
  """
  ✨ Generated from Field `Card`.`rarity` of type `Rarity!`
  """
  rarity: Rarity_Key
  """
  ✨ Generated from Field `Card`.`cardNumber` of type `String!`
  """
  cardNumber: String
  """
  ✨ `_expr` server value variant of `cardNumber` (✨ Generated from Field `Card`.`cardNumber` of type `String!`)
  """
  cardNumber_expr: String_Expr
  """
  ✨ Generated from Field `Card`.`description` of type `String`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Card`.`description` of type `String`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Card`.`displayName` of type `String!`
  """
  displayName: String
  """
  ✨ `_expr` server value variant of `displayName` (✨ Generated from Field `Card`.`displayName` of type `String!`)
  """
  displayName_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Card'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Card_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Card_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Card_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Card_Filter!]
  """
  ✨ Generated from Field `Card`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Card`.`rarityId` of type `UUID!`
  """
  rarityId: UUID_Filter
  """
  ✨ Generated from Field `Card`.`rarity` of type `Rarity!`
  """
  rarity: Rarity_Filter
  """
  ✨ Generated from Field `Card`.`cardNumber` of type `String!`
  """
  cardNumber: String_Filter
  """
  ✨ Generated from Field `Card`.`description` of type `String`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Card`.`displayName` of type `String!`
  """
  displayName: String_Filter
  """
  ✨ Generated from Field `Card`.`cardPacks_on_card` of type `[CardPack!]!`
  """
  cardPacks_on_card: CardPack_ListFilter
  """
  ✨ Generated from Field `Card`.`offers_on_card` of type `[Offer!]!`
  """
  offers_on_card: Offer_ListFilter
  """
  ✨ Generated from Field `Card`.`relatedCards_on_card` of type `[RelatedCard!]!`
  """
  relatedCards_on_card: RelatedCard_ListFilter
  """
  ✨ Generated from Field `Card`.`relatedCards_on_relatedCard` of type `[RelatedCard!]!`
  """
  relatedCards_on_relatedCard: RelatedCard_ListFilter
  """
  ✨ Generated from Field `Card`.`requests_on_card` of type `[Request!]!`
  """
  requests_on_card: Request_ListFilter
  """
  ✨ Generated from Field `Card`.`userCards_on_card` of type `[UserCard!]!`
  """
  userCards_on_card: UserCard_ListFilter
  """
  ✨ Generated from Field `Card`.`cards_via_RelatedCard_on_card` of type `[Card!]!`
  """
  cards_via_RelatedCard_on_card: Card_ListFilter
  """
  ✨ Generated from Field `Card`.`cards_via_RelatedCard_on_relatedCard` of type `[Card!]!`
  """
  cards_via_RelatedCard_on_relatedCard: Card_ListFilter
  """
  ✨ Generated from Field `Card`.`packs_via_CardPack` of type `[Pack!]!`
  """
  packs_via_CardPack: Pack_ListFilter
  """
  ✨ Generated from Field `Card`.`users_via_Offer` of type `[User!]!`
  """
  users_via_Offer: User_ListFilter
  """
  ✨ Generated from Field `Card`.`users_via_Request` of type `[User!]!`
  """
  users_via_Request: User_ListFilter
  """
  ✨ Generated from Field `Card`.`users_via_UserCard` of type `[User!]!`
  """
  users_via_UserCard: User_ListFilter
}
"""
✨ Generated first-row input type for table 'Card'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Card_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Card_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Card_Filter
}
"""
✨ Generated having input type for table 'Card'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Card_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Card_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Card_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Card_Having!]
  """
  ✨ Generated from Field `Card`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Card`.`cardNumber_count` of type `Int!`
  """
  cardNumber_count: Int_Filter
  """
  ✨ Generated from Field `Card`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Card`.`displayName_count` of type `Int!`
  """
  displayName_count: Int_Filter
  """
  ✨ Generated from Field `Card`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Card`.`rarityId_count` of type `Int!`
  """
  rarityId_count: Int_Filter
}
"""
✨ Generated key input type for table 'Card'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Card_Key {
  """
  ✨ Generated from Field `Card`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Card`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Card'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Card_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Card_Filter
}
"""
✨ Generated order input type for table 'Card'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Card_Order {
  """
  ✨ Generated from Field `Card`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Card`.`rarityId` of type `UUID!`
  """
  rarityId: OrderDirection
  """
  ✨ Generated from Field `Card`.`rarity` of type `Rarity!`
  """
  rarity: Rarity_Order
  """
  ✨ Generated from Field `Card`.`cardNumber` of type `String!`
  """
  cardNumber: OrderDirection
  """
  ✨ Generated from Field `Card`.`description` of type `String`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Card`.`displayName` of type `String!`
  """
  displayName: OrderDirection
}
"""
✨ Generated data input type for table 'CardPack'. It includes all necessary fields for creating or upserting rows into table.
"""
input CardPack_Data {
  """
  ✨ Generated from Field `CardPack`.`cardId` of type `UUID!`
  """
  cardId: UUID
  """
  ✨ `_expr` server value variant of `cardId` (✨ Generated from Field `CardPack`.`cardId` of type `UUID!`)
  """
  cardId_expr: UUID_Expr
  """
  ✨ Generated from Field `CardPack`.`packId` of type `UUID!`
  """
  packId: UUID
  """
  ✨ `_expr` server value variant of `packId` (✨ Generated from Field `CardPack`.`packId` of type `UUID!`)
  """
  packId_expr: UUID_Expr
  """
  ✨ Generated from Field `CardPack`.`card` of type `Card!`
  """
  card: Card_Key
  """
  ✨ Generated from Field `CardPack`.`pack` of type `Pack!`
  """
  pack: Pack_Key
}
"""
✨ Generated filter input type for table 'CardPack'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input CardPack_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [CardPack_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: CardPack_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [CardPack_Filter!]
  """
  ✨ Generated from Field `CardPack`.`cardId` of type `UUID!`
  """
  cardId: UUID_Filter
  """
  ✨ Generated from Field `CardPack`.`packId` of type `UUID!`
  """
  packId: UUID_Filter
  """
  ✨ Generated from Field `CardPack`.`card` of type `Card!`
  """
  card: Card_Filter
  """
  ✨ Generated from Field `CardPack`.`pack` of type `Pack!`
  """
  pack: Pack_Filter
}
"""
✨ Generated first-row input type for table 'CardPack'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input CardPack_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [CardPack_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: CardPack_Filter
}
"""
✨ Generated having input type for table 'CardPack'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input CardPack_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [CardPack_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: CardPack_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [CardPack_Having!]
  """
  ✨ Generated from Field `CardPack`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `CardPack`.`cardId_count` of type `Int!`
  """
  cardId_count: Int_Filter
  """
  ✨ Generated from Field `CardPack`.`packId_count` of type `Int!`
  """
  packId_count: Int_Filter
}
"""
✨ Generated key input type for table 'CardPack'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input CardPack_Key {
  """
  ✨ Generated from Field `CardPack`.`cardId` of type `UUID!`
  """
  cardId: UUID
  """
  ✨ `_expr` server value variant of `cardId` (✨ Generated from Field `CardPack`.`cardId` of type `UUID!`)
  """
  cardId_expr: UUID_Expr
  """
  ✨ Generated from Field `CardPack`.`packId` of type `UUID!`
  """
  packId: UUID
  """
  ✨ `_expr` server value variant of `packId` (✨ Generated from Field `CardPack`.`packId` of type `UUID!`)
  """
  packId_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'CardPack'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input CardPack_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: CardPack_Filter
}
"""
✨ Generated order input type for table 'CardPack'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input CardPack_Order {
  """
  ✨ Generated from Field `CardPack`.`cardId` of type `UUID!`
  """
  cardId: OrderDirection
  """
  ✨ Generated from Field `CardPack`.`packId` of type `UUID!`
  """
  packId: OrderDirection
  """
  ✨ Generated from Field `CardPack`.`card` of type `Card!`
  """
  card: Card_Order
  """
  ✨ Generated from Field `CardPack`.`pack` of type `Pack!`
  """
  pack: Pack_Order
}
"""
✨ Generated data input type for table 'Offer'. It includes all necessary fields for creating or upserting rows into table.
"""
input Offer_Data {
  """
  ✨ Generated from Field `Offer`.`userUid` of type `String!`
  """
  userUid: String
  """
  ✨ `_expr` server value variant of `userUid` (✨ Generated from Field `Offer`.`userUid` of type `String!`)
  """
  userUid_expr: String_Expr
  """
  ✨ Generated from Field `Offer`.`cardId` of type `UUID!`
  """
  cardId: UUID
  """
  ✨ `_expr` server value variant of `cardId` (✨ Generated from Field `Offer`.`cardId` of type `UUID!`)
  """
  cardId_expr: UUID_Expr
  """
  ✨ Generated from Field `Offer`.`card` of type `Card!`
  """
  card: Card_Key
  """
  ✨ Generated from Field `Offer`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `Offer`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Offer`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Offer`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Offer`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'Offer'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Offer_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Offer_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Offer_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Offer_Filter!]
  """
  ✨ Generated from Field `Offer`.`userUid` of type `String!`
  """
  userUid: String_Filter
  """
  ✨ Generated from Field `Offer`.`cardId` of type `UUID!`
  """
  cardId: UUID_Filter
  """
  ✨ Generated from Field `Offer`.`card` of type `Card!`
  """
  card: Card_Filter
  """
  ✨ Generated from Field `Offer`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `Offer`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'Offer'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Offer_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Offer_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Offer_Filter
}
"""
✨ Generated having input type for table 'Offer'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Offer_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Offer_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Offer_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Offer_Having!]
  """
  ✨ Generated from Field `Offer`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Offer`.`cardId_count` of type `Int!`
  """
  cardId_count: Int_Filter
  """
  ✨ Generated from Field `Offer`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Offer`.`userUid_count` of type `Int!`
  """
  userUid_count: Int_Filter
  """
  ✨ Generated from Field `Offer`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Offer`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Offer'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Offer_Key {
  """
  ✨ Generated from Field `Offer`.`userUid` of type `String!`
  """
  userUid: String
  """
  ✨ `_expr` server value variant of `userUid` (✨ Generated from Field `Offer`.`userUid` of type `String!`)
  """
  userUid_expr: String_Expr
  """
  ✨ Generated from Field `Offer`.`cardId` of type `UUID!`
  """
  cardId: UUID
  """
  ✨ `_expr` server value variant of `cardId` (✨ Generated from Field `Offer`.`cardId` of type `UUID!`)
  """
  cardId_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Offer'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Offer_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Offer_Filter
}
"""
✨ Generated order input type for table 'Offer'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Offer_Order {
  """
  ✨ Generated from Field `Offer`.`userUid` of type `String!`
  """
  userUid: OrderDirection
  """
  ✨ Generated from Field `Offer`.`cardId` of type `UUID!`
  """
  cardId: OrderDirection
  """
  ✨ Generated from Field `Offer`.`card` of type `Card!`
  """
  card: Card_Order
  """
  ✨ Generated from Field `Offer`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `Offer`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
}
"""
✨ Generated data input type for table 'Pack'. It includes all necessary fields for creating or upserting rows into table.
"""
input Pack_Data {
  """
  ✨ Generated from Field `Pack`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Pack`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Pack`.`setId` of type `UUID!`
  """
  setId: UUID
  """
  ✨ `_expr` server value variant of `setId` (✨ Generated from Field `Pack`.`setId` of type `UUID!`)
  """
  setId_expr: UUID_Expr
  """
  ✨ Generated from Field `Pack`.`set` of type `Set!`
  """
  set: Set_Key
  """
  ✨ Generated from Field `Pack`.`displayName` of type `String!`
  """
  displayName: String
  """
  ✨ `_expr` server value variant of `displayName` (✨ Generated from Field `Pack`.`displayName` of type `String!`)
  """
  displayName_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Pack'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Pack_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Pack_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Pack_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Pack_Filter!]
  """
  ✨ Generated from Field `Pack`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Pack`.`setId` of type `UUID!`
  """
  setId: UUID_Filter
  """
  ✨ Generated from Field `Pack`.`set` of type `Set!`
  """
  set: Set_Filter
  """
  ✨ Generated from Field `Pack`.`displayName` of type `String!`
  """
  displayName: String_Filter
  """
  ✨ Generated from Field `Pack`.`cardPacks_on_pack` of type `[CardPack!]!`
  """
  cardPacks_on_pack: CardPack_ListFilter
  """
  ✨ Generated from Field `Pack`.`cards_via_CardPack` of type `[Card!]!`
  """
  cards_via_CardPack: Card_ListFilter
}
"""
✨ Generated first-row input type for table 'Pack'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Pack_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Pack_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Pack_Filter
}
"""
✨ Generated having input type for table 'Pack'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Pack_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Pack_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Pack_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Pack_Having!]
  """
  ✨ Generated from Field `Pack`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Pack`.`displayName_count` of type `Int!`
  """
  displayName_count: Int_Filter
  """
  ✨ Generated from Field `Pack`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Pack`.`setId_count` of type `Int!`
  """
  setId_count: Int_Filter
}
"""
✨ Generated key input type for table 'Pack'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Pack_Key {
  """
  ✨ Generated from Field `Pack`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Pack`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Pack'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Pack_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Pack_Filter
}
"""
✨ Generated order input type for table 'Pack'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Pack_Order {
  """
  ✨ Generated from Field `Pack`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Pack`.`setId` of type `UUID!`
  """
  setId: OrderDirection
  """
  ✨ Generated from Field `Pack`.`set` of type `Set!`
  """
  set: Set_Order
  """
  ✨ Generated from Field `Pack`.`displayName` of type `String!`
  """
  displayName: OrderDirection
}
"""
✨ Generated data input type for table 'Rarity'. It includes all necessary fields for creating or upserting rows into table.
"""
input Rarity_Data {
  """
  ✨ Generated from Field `Rarity`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Rarity`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Rarity`.`chanceMultiplier` of type `Float!`
  """
  chanceMultiplier: Float
  """
  ✨ `_expr` server value variant of `chanceMultiplier` (✨ Generated from Field `Rarity`.`chanceMultiplier` of type `Float!`)
  """
  chanceMultiplier_expr: Float_Expr
  """
  ✨ `_update` server value variant of `chanceMultiplier` (✨ Generated from Field `Rarity`.`chanceMultiplier` of type `Float!`)
  """
  chanceMultiplier_update: [Float_Update!]
  """
  ✨ Generated from Field `Rarity`.`code` of type `String!`
  """
  code: String
  """
  ✨ `_expr` server value variant of `code` (✨ Generated from Field `Rarity`.`code` of type `String!`)
  """
  code_expr: String_Expr
  """
  ✨ Generated from Field `Rarity`.`description` of type `String`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Rarity`.`description` of type `String`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Rarity`.`displayName` of type `String!`
  """
  displayName: String
  """
  ✨ `_expr` server value variant of `displayName` (✨ Generated from Field `Rarity`.`displayName` of type `String!`)
  """
  displayName_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Rarity'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Rarity_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Rarity_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Rarity_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Rarity_Filter!]
  """
  ✨ Generated from Field `Rarity`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Rarity`.`chanceMultiplier` of type `Float!`
  """
  chanceMultiplier: Float_Filter
  """
  ✨ Generated from Field `Rarity`.`code` of type `String!`
  """
  code: String_Filter
  """
  ✨ Generated from Field `Rarity`.`description` of type `String`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Rarity`.`displayName` of type `String!`
  """
  displayName: String_Filter
  """
  ✨ Generated from Field `Rarity`.`cards_on_rarity` of type `[Card!]!`
  """
  cards_on_rarity: Card_ListFilter
}
"""
✨ Generated first-row input type for table 'Rarity'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Rarity_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Rarity_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Rarity_Filter
}
"""
✨ Generated having input type for table 'Rarity'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Rarity_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Rarity_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Rarity_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Rarity_Having!]
  """
  ✨ Generated from Field `Rarity`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Rarity`.`chanceMultiplier_count` of type `Int!`
  """
  chanceMultiplier_count: Int_Filter
  """
  ✨ Generated from Field `Rarity`.`code_count` of type `Int!`
  """
  code_count: Int_Filter
  """
  ✨ Generated from Field `Rarity`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Rarity`.`displayName_count` of type `Int!`
  """
  displayName_count: Int_Filter
  """
  ✨ Generated from Field `Rarity`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Rarity`.`chanceMultiplier_sum` of type `Float`
  """
  chanceMultiplier_sum: Float_Filter
  """
  ✨ Generated from Field `Rarity`.`chanceMultiplier_avg` of type `Float`
  """
  chanceMultiplier_avg: Float_Filter
  """
  ✨ Generated from Field `Rarity`.`chanceMultiplier_min` of type `Float`
  """
  chanceMultiplier_min: Float_Filter
  """
  ✨ Generated from Field `Rarity`.`chanceMultiplier_max` of type `Float`
  """
  chanceMultiplier_max: Float_Filter
}
"""
✨ Generated key input type for table 'Rarity'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Rarity_Key {
  """
  ✨ Generated from Field `Rarity`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Rarity`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Rarity'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Rarity_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Rarity_Filter
}
"""
✨ Generated order input type for table 'Rarity'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Rarity_Order {
  """
  ✨ Generated from Field `Rarity`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Rarity`.`chanceMultiplier` of type `Float!`
  """
  chanceMultiplier: OrderDirection
  """
  ✨ Generated from Field `Rarity`.`code` of type `String!`
  """
  code: OrderDirection
  """
  ✨ Generated from Field `Rarity`.`description` of type `String`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Rarity`.`displayName` of type `String!`
  """
  displayName: OrderDirection
}
"""
✨ Generated data input type for table 'RelatedCard'. It includes all necessary fields for creating or upserting rows into table.
"""
input RelatedCard_Data {
  """
  ✨ Generated from Field `RelatedCard`.`cardId` of type `UUID!`
  """
  cardId: UUID
  """
  ✨ `_expr` server value variant of `cardId` (✨ Generated from Field `RelatedCard`.`cardId` of type `UUID!`)
  """
  cardId_expr: UUID_Expr
  """
  ✨ Generated from Field `RelatedCard`.`relatedCardId` of type `UUID!`
  """
  relatedCardId: UUID
  """
  ✨ `_expr` server value variant of `relatedCardId` (✨ Generated from Field `RelatedCard`.`relatedCardId` of type `UUID!`)
  """
  relatedCardId_expr: UUID_Expr
  """
  ✨ Generated from Field `RelatedCard`.`card` of type `Card!`
  """
  card: Card_Key
  """
  ✨ Generated from Field `RelatedCard`.`relatedCard` of type `Card!`
  """
  relatedCard: Card_Key
}
"""
✨ Generated filter input type for table 'RelatedCard'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input RelatedCard_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [RelatedCard_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: RelatedCard_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [RelatedCard_Filter!]
  """
  ✨ Generated from Field `RelatedCard`.`cardId` of type `UUID!`
  """
  cardId: UUID_Filter
  """
  ✨ Generated from Field `RelatedCard`.`relatedCardId` of type `UUID!`
  """
  relatedCardId: UUID_Filter
  """
  ✨ Generated from Field `RelatedCard`.`card` of type `Card!`
  """
  card: Card_Filter
  """
  ✨ Generated from Field `RelatedCard`.`relatedCard` of type `Card!`
  """
  relatedCard: Card_Filter
}
"""
✨ Generated first-row input type for table 'RelatedCard'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input RelatedCard_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [RelatedCard_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: RelatedCard_Filter
}
"""
✨ Generated having input type for table 'RelatedCard'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input RelatedCard_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [RelatedCard_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: RelatedCard_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [RelatedCard_Having!]
  """
  ✨ Generated from Field `RelatedCard`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `RelatedCard`.`cardId_count` of type `Int!`
  """
  cardId_count: Int_Filter
  """
  ✨ Generated from Field `RelatedCard`.`relatedCardId_count` of type `Int!`
  """
  relatedCardId_count: Int_Filter
}
"""
✨ Generated key input type for table 'RelatedCard'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input RelatedCard_Key {
  """
  ✨ Generated from Field `RelatedCard`.`cardId` of type `UUID!`
  """
  cardId: UUID
  """
  ✨ `_expr` server value variant of `cardId` (✨ Generated from Field `RelatedCard`.`cardId` of type `UUID!`)
  """
  cardId_expr: UUID_Expr
  """
  ✨ Generated from Field `RelatedCard`.`relatedCardId` of type `UUID!`
  """
  relatedCardId: UUID
  """
  ✨ `_expr` server value variant of `relatedCardId` (✨ Generated from Field `RelatedCard`.`relatedCardId` of type `UUID!`)
  """
  relatedCardId_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'RelatedCard'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input RelatedCard_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: RelatedCard_Filter
}
"""
✨ Generated order input type for table 'RelatedCard'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input RelatedCard_Order {
  """
  ✨ Generated from Field `RelatedCard`.`cardId` of type `UUID!`
  """
  cardId: OrderDirection
  """
  ✨ Generated from Field `RelatedCard`.`relatedCardId` of type `UUID!`
  """
  relatedCardId: OrderDirection
  """
  ✨ Generated from Field `RelatedCard`.`card` of type `Card!`
  """
  card: Card_Order
  """
  ✨ Generated from Field `RelatedCard`.`relatedCard` of type `Card!`
  """
  relatedCard: Card_Order
}
"""
✨ Generated data input type for table 'Request'. It includes all necessary fields for creating or upserting rows into table.
"""
input Request_Data {
  """
  ✨ Generated from Field `Request`.`userUid` of type `String!`
  """
  userUid: String
  """
  ✨ `_expr` server value variant of `userUid` (✨ Generated from Field `Request`.`userUid` of type `String!`)
  """
  userUid_expr: String_Expr
  """
  ✨ Generated from Field `Request`.`cardId` of type `UUID!`
  """
  cardId: UUID
  """
  ✨ `_expr` server value variant of `cardId` (✨ Generated from Field `Request`.`cardId` of type `UUID!`)
  """
  cardId_expr: UUID_Expr
  """
  ✨ Generated from Field `Request`.`card` of type `Card!`
  """
  card: Card_Key
  """
  ✨ Generated from Field `Request`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `Request`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Request`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Request`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Request`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'Request'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Request_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Request_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Request_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Request_Filter!]
  """
  ✨ Generated from Field `Request`.`userUid` of type `String!`
  """
  userUid: String_Filter
  """
  ✨ Generated from Field `Request`.`cardId` of type `UUID!`
  """
  cardId: UUID_Filter
  """
  ✨ Generated from Field `Request`.`card` of type `Card!`
  """
  card: Card_Filter
  """
  ✨ Generated from Field `Request`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `Request`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'Request'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Request_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Request_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Request_Filter
}
"""
✨ Generated having input type for table 'Request'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Request_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Request_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Request_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Request_Having!]
  """
  ✨ Generated from Field `Request`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Request`.`cardId_count` of type `Int!`
  """
  cardId_count: Int_Filter
  """
  ✨ Generated from Field `Request`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Request`.`userUid_count` of type `Int!`
  """
  userUid_count: Int_Filter
  """
  ✨ Generated from Field `Request`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Request`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Request'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Request_Key {
  """
  ✨ Generated from Field `Request`.`userUid` of type `String!`
  """
  userUid: String
  """
  ✨ `_expr` server value variant of `userUid` (✨ Generated from Field `Request`.`userUid` of type `String!`)
  """
  userUid_expr: String_Expr
  """
  ✨ Generated from Field `Request`.`cardId` of type `UUID!`
  """
  cardId: UUID
  """
  ✨ `_expr` server value variant of `cardId` (✨ Generated from Field `Request`.`cardId` of type `UUID!`)
  """
  cardId_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Request'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Request_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Request_Filter
}
"""
✨ Generated order input type for table 'Request'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Request_Order {
  """
  ✨ Generated from Field `Request`.`userUid` of type `String!`
  """
  userUid: OrderDirection
  """
  ✨ Generated from Field `Request`.`cardId` of type `UUID!`
  """
  cardId: OrderDirection
  """
  ✨ Generated from Field `Request`.`card` of type `Card!`
  """
  card: Card_Order
  """
  ✨ Generated from Field `Request`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `Request`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
}
"""
✨ Generated data input type for table 'Set'. It includes all necessary fields for creating or upserting rows into table.
"""
input Set_Data {
  """
  ✨ Generated from Field `Set`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Set`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Set`.`code` of type `String!`
  """
  code: String
  """
  ✨ `_expr` server value variant of `code` (✨ Generated from Field `Set`.`code` of type `String!`)
  """
  code_expr: String_Expr
  """
  ✨ Generated from Field `Set`.`displayName` of type `String!`
  """
  displayName: String
  """
  ✨ `_expr` server value variant of `displayName` (✨ Generated from Field `Set`.`displayName` of type `String!`)
  """
  displayName_expr: String_Expr
  """
  ✨ Generated from Field `Set`.`releaseDate` of type `Date!`
  """
  releaseDate: Date
  """
  ✨ `_date` server value variant of `releaseDate` (✨ Generated from Field `Set`.`releaseDate` of type `Date!`)
  """
  releaseDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `releaseDate` (✨ Generated from Field `Set`.`releaseDate` of type `Date!`)
  """
  releaseDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `releaseDate` (✨ Generated from Field `Set`.`releaseDate` of type `Date!`)
  """
  releaseDate_update: [Date_Update!]
}
"""
✨ Generated filter input type for table 'Set'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Set_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Set_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Set_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Set_Filter!]
  """
  ✨ Generated from Field `Set`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Set`.`code` of type `String!`
  """
  code: String_Filter
  """
  ✨ Generated from Field `Set`.`displayName` of type `String!`
  """
  displayName: String_Filter
  """
  ✨ Generated from Field `Set`.`releaseDate` of type `Date!`
  """
  releaseDate: Date_Filter
  """
  ✨ Generated from Field `Set`.`packs_on_set` of type `[Pack!]!`
  """
  packs_on_set: Pack_ListFilter
}
"""
✨ Generated first-row input type for table 'Set'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Set_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Set_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Set_Filter
}
"""
✨ Generated having input type for table 'Set'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Set_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Set_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Set_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Set_Having!]
  """
  ✨ Generated from Field `Set`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Set`.`code_count` of type `Int!`
  """
  code_count: Int_Filter
  """
  ✨ Generated from Field `Set`.`displayName_count` of type `Int!`
  """
  displayName_count: Int_Filter
  """
  ✨ Generated from Field `Set`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Set`.`releaseDate_count` of type `Int!`
  """
  releaseDate_count: Int_Filter
  """
  ✨ Generated from Field `Set`.`releaseDate_min` of type `Date`
  """
  releaseDate_min: Date_Filter
  """
  ✨ Generated from Field `Set`.`releaseDate_max` of type `Date`
  """
  releaseDate_max: Date_Filter
}
"""
✨ Generated key input type for table 'Set'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Set_Key {
  """
  ✨ Generated from Field `Set`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Set`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Set'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Set_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Set_Filter
}
"""
✨ Generated order input type for table 'Set'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Set_Order {
  """
  ✨ Generated from Field `Set`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Set`.`code` of type `String!`
  """
  code: OrderDirection
  """
  ✨ Generated from Field `Set`.`displayName` of type `String!`
  """
  displayName: OrderDirection
  """
  ✨ Generated from Field `Set`.`releaseDate` of type `Date!`
  """
  releaseDate: OrderDirection
}
"""
✨ Generated data input type for table 'User'. It includes all necessary fields for creating or upserting rows into table.
"""
input User_Data {
  """
  ✨ Generated from Field `User`.`uid` of type `String!`
  """
  uid: String
  """
  ✨ `_expr` server value variant of `uid` (✨ Generated from Field `User`.`uid` of type `String!`)
  """
  uid_expr: String_Expr
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `User`.`displayName` of type `String`
  """
  displayName: String
  """
  ✨ `_expr` server value variant of `displayName` (✨ Generated from Field `User`.`displayName` of type `String`)
  """
  displayName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`email` of type `String`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `User`.`email` of type `String`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `User`.`lastLogin` of type `Timestamp`
  """
  lastLogin: Timestamp
  """
  ✨ `_expr` server value variant of `lastLogin` (✨ Generated from Field `User`.`lastLogin` of type `Timestamp`)
  """
  lastLogin_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `lastLogin` (✨ Generated from Field `User`.`lastLogin` of type `Timestamp`)
  """
  lastLogin_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `lastLogin` (✨ Generated from Field `User`.`lastLogin` of type `Timestamp`)
  """
  lastLogin_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `User`.`lastUpdate` of type `Timestamp`
  """
  lastUpdate: Timestamp
  """
  ✨ `_expr` server value variant of `lastUpdate` (✨ Generated from Field `User`.`lastUpdate` of type `Timestamp`)
  """
  lastUpdate_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `lastUpdate` (✨ Generated from Field `User`.`lastUpdate` of type `Timestamp`)
  """
  lastUpdate_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `lastUpdate` (✨ Generated from Field `User`.`lastUpdate` of type `Timestamp`)
  """
  lastUpdate_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'User'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [User_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: User_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [User_Filter!]
  """
  ✨ Generated from Field `User`.`uid` of type `String!`
  """
  uid: String_Filter
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`displayName` of type `String`
  """
  displayName: String_Filter
  """
  ✨ Generated from Field `User`.`email` of type `String`
  """
  email: String_Filter
  """
  ✨ Generated from Field `User`.`lastLogin` of type `Timestamp`
  """
  lastLogin: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`lastUpdate` of type `Timestamp`
  """
  lastUpdate: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`offers_on_user` of type `[Offer!]!`
  """
  offers_on_user: Offer_ListFilter
  """
  ✨ Generated from Field `User`.`requests_on_user` of type `[Request!]!`
  """
  requests_on_user: Request_ListFilter
  """
  ✨ Generated from Field `User`.`userCards_on_user` of type `[UserCard!]!`
  """
  userCards_on_user: UserCard_ListFilter
  """
  ✨ Generated from Field `User`.`cards_via_Offer` of type `[Card!]!`
  """
  cards_via_Offer: Card_ListFilter
  """
  ✨ Generated from Field `User`.`cards_via_Request` of type `[Card!]!`
  """
  cards_via_Request: Card_ListFilter
  """
  ✨ Generated from Field `User`.`cards_via_UserCard` of type `[Card!]!`
  """
  cards_via_UserCard: Card_ListFilter
}
"""
✨ Generated first-row input type for table 'User'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input User_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [User_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: User_Filter
}
"""
✨ Generated having input type for table 'User'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [User_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: User_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [User_Having!]
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: Int_Filter
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: Int_Filter
  """
  ✨ Generated from Field `User`.`lastLogin_count` of type `Int!`
  """
  lastLogin_count: Int_Filter
  """
  ✨ Generated from Field `User`.`lastUpdate_count` of type `Int!`
  """
  lastUpdate_count: Int_Filter
  """
  ✨ Generated from Field `User`.`uid_count` of type `Int!`
  """
  uid_count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`lastLogin_min` of type `Timestamp`
  """
  lastLogin_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`lastUpdate_min` of type `Timestamp`
  """
  lastUpdate_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`lastLogin_max` of type `Timestamp`
  """
  lastLogin_max: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`lastUpdate_max` of type `Timestamp`
  """
  lastUpdate_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'User'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input User_Key {
  """
  ✨ Generated from Field `User`.`uid` of type `String!`
  """
  uid: String
  """
  ✨ `_expr` server value variant of `uid` (✨ Generated from Field `User`.`uid` of type `String!`)
  """
  uid_expr: String_Expr
}
"""
✨ Generated list filter input type for table 'User'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input User_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: User_Filter
}
"""
✨ Generated order input type for table 'User'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input User_Order {
  """
  ✨ Generated from Field `User`.`uid` of type `String!`
  """
  uid: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName` of type `String`
  """
  displayName: OrderDirection
  """
  ✨ Generated from Field `User`.`email` of type `String`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `User`.`lastLogin` of type `Timestamp`
  """
  lastLogin: OrderDirection
  """
  ✨ Generated from Field `User`.`lastUpdate` of type `Timestamp`
  """
  lastUpdate: OrderDirection
}
"""
✨ Generated data input type for table 'UserCard'. It includes all necessary fields for creating or upserting rows into table.
"""
input UserCard_Data {
  """
  ✨ Generated from Field `UserCard`.`userUid` of type `String!`
  """
  userUid: String
  """
  ✨ `_expr` server value variant of `userUid` (✨ Generated from Field `UserCard`.`userUid` of type `String!`)
  """
  userUid_expr: String_Expr
  """
  ✨ Generated from Field `UserCard`.`cardId` of type `UUID!`
  """
  cardId: UUID
  """
  ✨ `_expr` server value variant of `cardId` (✨ Generated from Field `UserCard`.`cardId` of type `UUID!`)
  """
  cardId_expr: UUID_Expr
  """
  ✨ Generated from Field `UserCard`.`card` of type `Card!`
  """
  card: Card_Key
  """
  ✨ Generated from Field `UserCard`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `UserCard`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `UserCard`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `UserCard`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `UserCard`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `UserCard`.`lastUpdate` of type `Timestamp`
  """
  lastUpdate: Timestamp
  """
  ✨ `_expr` server value variant of `lastUpdate` (✨ Generated from Field `UserCard`.`lastUpdate` of type `Timestamp`)
  """
  lastUpdate_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `lastUpdate` (✨ Generated from Field `UserCard`.`lastUpdate` of type `Timestamp`)
  """
  lastUpdate_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `lastUpdate` (✨ Generated from Field `UserCard`.`lastUpdate` of type `Timestamp`)
  """
  lastUpdate_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `UserCard`.`quantity` of type `Int!`
  """
  quantity: Int
  """
  ✨ `_expr` server value variant of `quantity` (✨ Generated from Field `UserCard`.`quantity` of type `Int!`)
  """
  quantity_expr: Int_Expr
  """
  ✨ `_update` server value variant of `quantity` (✨ Generated from Field `UserCard`.`quantity` of type `Int!`)
  """
  quantity_update: [Int_Update!]
}
"""
✨ Generated filter input type for table 'UserCard'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input UserCard_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [UserCard_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: UserCard_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [UserCard_Filter!]
  """
  ✨ Generated from Field `UserCard`.`userUid` of type `String!`
  """
  userUid: String_Filter
  """
  ✨ Generated from Field `UserCard`.`cardId` of type `UUID!`
  """
  cardId: UUID_Filter
  """
  ✨ Generated from Field `UserCard`.`card` of type `Card!`
  """
  card: Card_Filter
  """
  ✨ Generated from Field `UserCard`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `UserCard`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `UserCard`.`lastUpdate` of type `Timestamp`
  """
  lastUpdate: Timestamp_Filter
  """
  ✨ Generated from Field `UserCard`.`quantity` of type `Int!`
  """
  quantity: Int_Filter
}
"""
✨ Generated first-row input type for table 'UserCard'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input UserCard_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [UserCard_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: UserCard_Filter
}
"""
✨ Generated having input type for table 'UserCard'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input UserCard_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [UserCard_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: UserCard_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [UserCard_Having!]
  """
  ✨ Generated from Field `UserCard`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `UserCard`.`cardId_count` of type `Int!`
  """
  cardId_count: Int_Filter
  """
  ✨ Generated from Field `UserCard`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `UserCard`.`lastUpdate_count` of type `Int!`
  """
  lastUpdate_count: Int_Filter
  """
  ✨ Generated from Field `UserCard`.`quantity_count` of type `Int!`
  """
  quantity_count: Int_Filter
  """
  ✨ Generated from Field `UserCard`.`userUid_count` of type `Int!`
  """
  userUid_count: Int_Filter
  """
  ✨ Generated from Field `UserCard`.`quantity_sum` of type `Int`
  """
  quantity_sum: Int_Filter
  """
  ✨ Generated from Field `UserCard`.`quantity_avg` of type `Float`
  """
  quantity_avg: Float_Filter
  """
  ✨ Generated from Field `UserCard`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `UserCard`.`lastUpdate_min` of type `Timestamp`
  """
  lastUpdate_min: Timestamp_Filter
  """
  ✨ Generated from Field `UserCard`.`quantity_min` of type `Int`
  """
  quantity_min: Int_Filter
  """
  ✨ Generated from Field `UserCard`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `UserCard`.`lastUpdate_max` of type `Timestamp`
  """
  lastUpdate_max: Timestamp_Filter
  """
  ✨ Generated from Field `UserCard`.`quantity_max` of type `Int`
  """
  quantity_max: Int_Filter
}
"""
✨ Generated key input type for table 'UserCard'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input UserCard_Key {
  """
  ✨ Generated from Field `UserCard`.`userUid` of type `String!`
  """
  userUid: String
  """
  ✨ `_expr` server value variant of `userUid` (✨ Generated from Field `UserCard`.`userUid` of type `String!`)
  """
  userUid_expr: String_Expr
  """
  ✨ Generated from Field `UserCard`.`cardId` of type `UUID!`
  """
  cardId: UUID
  """
  ✨ `_expr` server value variant of `cardId` (✨ Generated from Field `UserCard`.`cardId` of type `UUID!`)
  """
  cardId_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'UserCard'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input UserCard_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: UserCard_Filter
}
"""
✨ Generated order input type for table 'UserCard'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input UserCard_Order {
  """
  ✨ Generated from Field `UserCard`.`userUid` of type `String!`
  """
  userUid: OrderDirection
  """
  ✨ Generated from Field `UserCard`.`cardId` of type `UUID!`
  """
  cardId: OrderDirection
  """
  ✨ Generated from Field `UserCard`.`card` of type `Card!`
  """
  card: Card_Order
  """
  ✨ Generated from Field `UserCard`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `UserCard`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `UserCard`.`lastUpdate` of type `Timestamp`
  """
  lastUpdate: OrderDirection
  """
  ✨ Generated from Field `UserCard`.`quantity` of type `Int!`
  """
  quantity: OrderDirection
}
